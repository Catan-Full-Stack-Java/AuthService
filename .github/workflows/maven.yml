# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Newman
      run: npm install -g newman

    - name: Start services with Docker Compose
      run: docker-compose up -d --build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Run Tests
      run: mvn test -Dspring.profiles.active=test
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dspring.profiles.active=test

    - name: Start services with Docker Compose
      run: docker-compose up -d --build
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/catan_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: password

    - name: Wait for Auth Service
      run: |
        for i in {1.30}; do
          curl -sSf http://localhost:8080/health && break || sleep 5;
        done
      shell: bash

    - name: Install Newman
      run: npm install -g newman

    - name: Run Newman Tests
      run: |
         newman run tests/postman/collextions.json \
           -e tests/postman/environment.json \
           --iteration-data tests/postman/registerAPITestData.json \
           --reporters cli,json \
           --reporter-json-export results.json

    - name: Upload Newman Test Report
      uses: actions/upload-artifact@v3
      with:
        name: newman-report
        path: results.json

    - name: Tear Down Docker Compose
      if: always()
      run: docker-compose down
  
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Submit Dependency Snapshot
      uses: advanced-security/maven-dependency-submission-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

